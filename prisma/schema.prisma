// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  name            String
  email           String   @unique
  password        String
  confirmPassword String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  otp             Otp?
  reviews         Review[]
  role            Role[]
}

model Otp {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  otp       String
}

model Role {
  id     Int      @id @default(autoincrement())
  userId Int
  user   User     @relation(fields: [userId], references: [id])
  role   RoleEnum
}

enum RoleEnum {
  user
  vendor
  rider
}

model Restaurant {
  id                Int                 @id @default(autoincrement())
  name              String              @unique
  address           String
  minimumOrderLimit String
  deliveyTime       String
  DeliveryCharges   String
  restaurantType    RestautrantTypeEnum
  reviews           Review[]
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  Menu              Dish[]
  Deals             Deal[]
}

model Review {
  id           Int        @id @default(autoincrement())
  userId       Int
  user         User       @relation(fields: [userId], references: [id])
  restaurantId Int
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
}

model Deal {
  id           Int        @id @default(autoincrement())
  name         String     @unique
  price        Int
  restaurantId Int
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  Dish         Dish[]
}

model Dish {
  id           Int              @id @default(autoincrement())
  name         String           @unique
  category     MenuCategoryEnum
  price        Int
  restaurantId Int
  restaurant   Restaurant       @relation(fields: [restaurantId], references: [id])
  dealId       Int
  deal         Deal             @relation(fields: [dealId], references: [id])
}

enum RestautrantTypeEnum {
  homeDelivery
  pickup
}

enum MenuCategoryEnum {
  traditional
  international
  homemade
  cuisine
  chineese
}
